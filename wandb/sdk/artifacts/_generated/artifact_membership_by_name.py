# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Literal, Optional

from pydantic import Field

from wandb._pydantic import GQLBase, GQLId, Typename

from .fragments import ArtifactFragment


class ArtifactMembershipByName(GQLBase):
    project: Optional[ArtifactMembershipByNameProject]


class ArtifactMembershipByNameProject(GQLBase):
    artifact_collection_membership: Optional[
        ArtifactMembershipByNameProjectArtifactCollectionMembership
    ] = Field(alias="artifactCollectionMembership")


class ArtifactMembershipByNameProjectArtifactCollectionMembership(GQLBase):
    id: GQLId
    artifact_collection: Optional[
        ArtifactMembershipByNameProjectArtifactCollectionMembershipArtifactCollection
    ] = Field(alias="artifactCollection")
    artifact: Optional[ArtifactFragment]


class ArtifactMembershipByNameProjectArtifactCollectionMembershipArtifactCollection(
    GQLBase
):
    typename__: Typename[
        Literal["ArtifactCollection", "ArtifactPortfolio", "ArtifactSequence"]
    ]
    id: GQLId
    name: str
    project: Optional[
        ArtifactMembershipByNameProjectArtifactCollectionMembershipArtifactCollectionProject
    ]


class ArtifactMembershipByNameProjectArtifactCollectionMembershipArtifactCollectionProject(
    GQLBase
):
    id: GQLId
    entity_name: str = Field(alias="entityName")
    name: str


ArtifactMembershipByName.model_rebuild()
ArtifactMembershipByNameProject.model_rebuild()
ArtifactMembershipByNameProjectArtifactCollectionMembership.model_rebuild()
ArtifactMembershipByNameProjectArtifactCollectionMembershipArtifactCollection.model_rebuild()
