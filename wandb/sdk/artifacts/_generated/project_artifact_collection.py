# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Literal, Optional

from pydantic import Field

from wandb._pydantic import GQLResult, Typename

from .fragments import ArtifactCollectionFragment


class ProjectArtifactCollection(GQLResult):
    project: Optional[ProjectArtifactCollectionProject]


class ProjectArtifactCollectionProject(GQLResult):
    artifact_type: Optional[ProjectArtifactCollectionProjectArtifactType] = Field(
        alias="artifactType"
    )


class ProjectArtifactCollectionProjectArtifactType(GQLResult):
    artifact_collection: Optional[
        ProjectArtifactCollectionProjectArtifactTypeArtifactCollection
    ] = Field(alias="artifactCollection")


class ProjectArtifactCollectionProjectArtifactTypeArtifactCollection(
    ArtifactCollectionFragment
):
    typename__: Typename[
        Literal["ArtifactCollection", "ArtifactPortfolio", "ArtifactSequence"]
    ]


ProjectArtifactCollection.model_rebuild()
ProjectArtifactCollectionProject.model_rebuild()
ProjectArtifactCollectionProjectArtifactType.model_rebuild()
