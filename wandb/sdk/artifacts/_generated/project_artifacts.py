# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Optional

from typing_extensions import Literal

from wandb._pydantic import GQLBase, Typename

from .fragments import ArtifactsFragment


class ProjectArtifacts(GQLBase):
    project: Optional[ProjectArtifactsProject]


class ProjectArtifactsProject(GQLBase):
    artifact_type: Optional[ProjectArtifactsProjectArtifactType]


class ProjectArtifactsProjectArtifactType(GQLBase):
    artifact_collection: Optional[ProjectArtifactsProjectArtifactTypeArtifactCollection]


class ProjectArtifactsProjectArtifactTypeArtifactCollection(GQLBase):
    typename__: Typename[
        Literal["ArtifactCollection", "ArtifactPortfolio", "ArtifactSequence"]
    ]
    name: str
    artifacts: Optional[ArtifactsFragment]


ProjectArtifacts.model_rebuild()
ProjectArtifactsProject.model_rebuild()
ProjectArtifactsProjectArtifactType.model_rebuild()
ProjectArtifactsProjectArtifactTypeArtifactCollection.model_rebuild()
