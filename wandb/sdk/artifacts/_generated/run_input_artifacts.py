# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import List, Optional

from pydantic import Field

from wandb._pydantic import GQLResult

from .fragments import ArtifactFragment, PageInfoFragment


class RunInputArtifacts(GQLResult):
    project: Optional[RunInputArtifactsProject]


class RunInputArtifactsProject(GQLResult):
    run: Optional[RunInputArtifactsProjectRun]


class RunInputArtifactsProjectRun(GQLResult):
    input_artifacts: Optional[RunInputArtifactsProjectRunInputArtifacts] = Field(
        alias="inputArtifacts"
    )


class RunInputArtifactsProjectRunInputArtifacts(GQLResult):
    total_count: int = Field(alias="totalCount")
    edges: List[RunInputArtifactsProjectRunInputArtifactsEdges]
    page_info: PageInfoFragment = Field(alias="pageInfo")


class RunInputArtifactsProjectRunInputArtifactsEdges(GQLResult):
    node: Optional[ArtifactFragment]


RunInputArtifacts.model_rebuild()
RunInputArtifactsProject.model_rebuild()
RunInputArtifactsProjectRun.model_rebuild()
RunInputArtifactsProjectRunInputArtifacts.model_rebuild()
RunInputArtifactsProjectRunInputArtifactsEdges.model_rebuild()
